<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ page import="java.util.Map" %>
<%@ page import="java.util.List" %>
<%@ page import="java.util.LinkedList" %>
<%@ page import="java.util.LinkedHashMap" %>
<%@ page import="java.text.NumberFormat" %>
<%@ page import="java.util.Locale" %>

<!-- For each Test -->
<c:forEach begin="1" end="${fn:length(testsResults)}" var="i">
<div class="test-result">
	<c:set var="testResult" value="${testsResults[i-1]}"/>
	<c:set var="maxNumberOfTops" value="0"/>
	<c:set var="maxTopResults"/>
	<!-- For each Par -->
	<c:forEach var="parResult" items="${testResult.parResults}">
		<!-- Get number of Tops generated -->
		<c:set var="topResultsLength" value="${fn:length(parResult.topResults)}" />
		<!-- If number of tops for this Par is bigger, updates Max values -->
		<c:if test="${maxNumberOfTops < topResultsLength}">
			<c:set var="maxNumberOfTops" value="${topResultsLength}"/>
			<c:set var="maxTopResults" value="${parResult.topResults}"/>
		</c:if>
	</c:forEach>	
	 
	<!-- Test Name -->
	<div class="chip test-name white lighten-4">
		<div class="chip test-id grey lighten-2">${testResult.test.id}</div>
		<span id="test-name"> 
		<c:choose>
			<c:when test="${!empty testResult.test.name}">${testResult.test.name}</c:when>
			<c:otherwise>[Sin t√≠tulo]</c:otherwise>
		</c:choose>
		</span>
	</div>
	<tag:ResultsTable id="bas-${i}" source1="${testResult.test.source1.name}" source2="${testResult.test.source2.name}" testResult="${testResult}" maxNumberOfTops="${maxNumberOfTops}" maxTopResults="${maxTopResults}" />
	<tag:AdvancedResultsTable id="adv-${i}" source1="${testResult.test.source1.name}" source2="${testResult.test.source2.name}" testName="${testResult.test.name}" testResult="${testResult}" />
	<c:set var="i" value="${i+1}"/>
</div>
</c:forEach>
<script type="text/javascript">
var wbBasic;
var wbAdvanced;
var htmlBasic = '';
var htmlAdvanced = '';
$(document).ready(function() {
	/*
	wbBasic = XLSX.utils.book_new();
	wbAdvanced = XLSX.utils.book_new();
	*/
	prepareExports();
	
	/*$('button#export-excel').click(exportResultsExcel);*/
	$('button#export-html').click(exportResultsHTML);
	$('div.test-name').click(clickTestName);
	$('table .chip').click(clickViewDistances);
	
    $('table.basic-results-table').each(function() {
    	$(this).DataTable({
    		autoWidth: true,
    		ordering: false,
            scrollX: true, // Enable horizontal scrolling
            fixedColumns: {
                leftColumns: 1, // Number of columns to fix on the left
            },
            columnDefs: [
                { "width": "15%", "targets": 0 }
            ]
    	});
    });
});

</script>